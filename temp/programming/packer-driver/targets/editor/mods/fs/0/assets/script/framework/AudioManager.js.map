{"version":3,"sources":["file:///C:/Users/USER/Desktop/ban_may_bay/assets/script/framework/AudioManager.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","AudioManager","start","i","audioList","length","element","_dict","name","_audioSource","getComponent","play","audioClip","undefined","playOneShot"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BASjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAAC,CAACH,SAAD,CAAD,C,oCAFb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA,yCAIb,EAJa;;AAAA,gDAKJ,IALI;AAAA;;AAOxCM,QAAAA,KAAK,GAAI;AACL,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,kBAAMG,OAAO,GAAG,KAAKF,SAAL,CAAeD,CAAf,CAAhB;AACA,iBAAKI,KAAL,CAAWD,OAAO,CAACE,IAAnB,IAA2BF,OAA3B;AACH;;AAED,eAAKG,YAAL,GAAoB,KAAKC,YAAL,CAAkBZ,WAAlB,CAApB;AACH;;AAEMa,QAAAA,IAAI,CAACH,IAAD,EAAc;AACrB,gBAAMI,SAAS,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAlB;;AACA,cAAGI,SAAS,KAAKC,SAAjB,EAA2B;AACvB,iBAAKJ,YAAL,CAAkBK,WAAlB,CAA8BF,SAA9B;AACH;AACJ,SArBuC,CAuBxC;AACA;AACA;;;AAzBwC,O;;;;;iBAER,E","sourcesContent":["\r\nimport { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\ninterface IAudioMap {\r\n    [name: string]: AudioClip;\r\n}\r\n\r\n@ccclass('AudioManager')\r\nexport class AudioManager extends Component {\r\n    @property([AudioClip])\r\n    public audioList: AudioClip[] = [];\r\n\r\n    private _dict: IAudioMap = {};\r\n    private _audioSource: AudioSource = null;\r\n\r\n    start () {\r\n        for (let i = 0; i < this.audioList.length; i++) {\r\n            const element = this.audioList[i];\r\n            this._dict[element.name] = element;\r\n        }\r\n\r\n        this._audioSource = this.getComponent(AudioSource);\r\n    }\r\n\r\n    public play(name: string){\r\n        const audioClip = this._dict[name];\r\n        if(audioClip !== undefined){\r\n            this._audioSource.playOneShot(audioClip);\r\n        }\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n"]}