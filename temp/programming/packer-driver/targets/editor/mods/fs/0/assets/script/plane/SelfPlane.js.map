{"version":3,"sources":["file:///C:/Users/USER/Desktop/ban_may_bay/assets/script/plane/SelfPlane.ts"],"names":["_decorator","Component","Node","Collider","AudioSource","Constant","ccclass","property","SelfPlane","start","_audioEffect","getComponent","onEnable","collider","on","_onTriggerEnter","onDisable","off","init","_currLife","lifeValue","isDie","explode","active","bloodFace","setScale","event","otherCollider","material","friction","collisionGroup","getGroup","CollisionType","ENEMY_PLANE","ENEMY_BULLET","blood","play","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;AAAyBC,MAAAA,W,OAAAA,W;;AACtDC,MAAAA,Q,iBAAAA,Q;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;2BAKjBQ,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,oCANb,MACaM,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,6CAOlB,CAPkB;;AAAA,yCAQtB,KARsB;;AAAA,6CAUjB,CAViB;;AAAA,gDAWD,IAXC;AAAA;;AAarCQ,QAAAA,KAAK,GAAE;AACH,eAAKC,YAAL,GAAoB,KAAKC,YAAL,CAAkBP,WAAlB,CAApB;AACH;;AAGDQ,QAAAA,QAAQ,GAAI;AACR,gBAAMC,QAAQ,GAAG,KAAKF,YAAL,CAAkBR,QAAlB,CAAjB;AACAU,UAAAA,QAAQ,CAACC,EAAT,CAAY,gBAAZ,EAA8B,KAAKC,eAAnC,EAAoD,IAApD;AACH;;AAEDC,QAAAA,SAAS,GAAI;AACT,gBAAMH,QAAQ,GAAG,KAAKF,YAAL,CAAkBR,QAAlB,CAAjB;AACAU,UAAAA,QAAQ,CAACI,GAAT,CAAa,gBAAb,EAA+B,KAAKF,eAApC,EAAqD,IAArD;AACH,SA1BoC,CA4BrC;AACA;AACA;;;AAEOG,QAAAA,IAAI,GAAE;AACT,eAAKC,SAAL,GAAiB,KAAKC,SAAtB;AACA,eAAKC,KAAL,GAAa,KAAb;AACA,eAAKC,OAAL,CAAaC,MAAb,GAAsB,KAAtB;AACA,eAAKC,SAAL,CAAeC,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACH;;AAEOV,QAAAA,eAAe,CAACW,KAAD,EAAsB;AACzC;AACA,cAAGA,KAAK,CAACC,aAAN,CAAoBC,QAApB,CAA6BC,QAA7B,IAAyC,GAA5C,EAAgD;AAC5C;AACH;;AAED,gBAAMC,cAAc,GAAGJ,KAAK,CAACC,aAAN,CAAoBI,QAApB,EAAvB;;AACA,cAAGD,cAAc,KAAK;AAAA;AAAA,oCAASE,aAAT,CAAuBC,WAA1C,IAAyDH,cAAc,KAAK;AAAA;AAAA,oCAASE,aAAT,CAAuBE,YAAtG,EAAmH;AAC/G,gBAAG,KAAKf,SAAL,KAAmB,KAAKC,SAA3B,EAAqC;AACjC,mBAAKe,KAAL,CAAWZ,MAAX,GAAoB,IAApB;AACH;;AACD,iBAAKJ,SAAL;AACA,iBAAKK,SAAL,CAAeC,QAAf,CAAwB,KAAKN,SAAL,GAAiB,KAAKC,SAA9C,EAAyD,CAAzD,EAA4D,CAA5D;;AACA,gBAAG,KAAKD,SAAL,IAAiB,CAApB,EAAsB;AAClB,mBAAKE,KAAL,GAAa,IAAb;;AACA,mBAAKX,YAAL,CAAkB0B,IAAlB;;AACA,mBAAKd,OAAL,CAAaC,MAAb,GAAsB,IAAtB;AACA,mBAAKY,KAAL,CAAWZ,MAAX,GAAoB,KAApB;AACAc,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ;AACJ;;AA5DoC,O;;;;;iBAEd,I;;;;;;;iBAEE,I;;;;;;;iBAEJ,I","sourcesContent":["\r\nimport { _decorator, Component, Node, Collider, ITriggerEvent, AudioSource } from 'cc';\r\nimport { Constant } from '../framework/Constant';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n@ccclass('SelfPlane')\r\nexport class SelfPlane extends Component {\r\n    @property(Node)\r\n    public explode: Node = null;\r\n    @property(Node)\r\n    public bloodFace: Node = null;\r\n    @property(Node)\r\n    public blood: Node = null;\r\n    public lifeValue = 5;\r\n    public isDie = false;\r\n\r\n    private _currLife = 0;\r\n    private _audioEffect: AudioSource = null;\r\n\r\n    start(){\r\n        this._audioEffect = this.getComponent(AudioSource);\r\n    }\r\n\r\n\r\n    onEnable () {\r\n        const collider = this.getComponent(Collider);\r\n        collider.on('onTriggerEnter', this._onTriggerEnter, this);\r\n    }\r\n\r\n    onDisable () {\r\n        const collider = this.getComponent(Collider);\r\n        collider.off('onTriggerEnter', this._onTriggerEnter, this);\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n\r\n    public init(){\r\n        this._currLife = this.lifeValue;\r\n        this.isDie = false;\r\n        this.explode.active = false;\r\n        this.bloodFace.setScale(1, 1, 1);\r\n    }\r\n\r\n    private _onTriggerEnter(event: ITriggerEvent){\r\n        // some trick to fix \"trigger vs trigger problem\" in physx\r\n        if(event.otherCollider.material.friction == 100){\r\n            return;\r\n        }\r\n\r\n        const collisionGroup = event.otherCollider.getGroup();\r\n        if(collisionGroup === Constant.CollisionType.ENEMY_PLANE || collisionGroup === Constant.CollisionType.ENEMY_BULLET){\r\n            if(this._currLife === this.lifeValue){\r\n                this.blood.active = true;\r\n            }\r\n            this._currLife --;\r\n            this.bloodFace.setScale(this._currLife / this.lifeValue, 1, 1);\r\n            if(this._currLife <=0){\r\n                this.isDie = true;\r\n                this._audioEffect.play();\r\n                this.explode.active = true;\r\n                this.blood.active = false;\r\n                console.log('self plane is die');\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}